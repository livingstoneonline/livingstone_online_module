<?php

/**
 * @file
 * Hook callbacks for this module.
 */

/**
 * Implements hook_theme().
 */
function livingstone_transcript_menu() {
  return array(
    'livingstone/transcript/%' => array(
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
      'page callback' => 'livingstone_transcript_callback',
      'page arguments' => array(2, 3),
    ),
  );
}

/**
 * Callback.
 */
function livingstone_transcript_callback($pid, $dsid) {
  module_load_include('inc', 'livingstone', 'includes/utilities');
  module_load_include('inc', 'livingstone_transcript', 'transcript');
  $project_id = livingstone_pid_to_project_id($pid);
  $object = islandora_object_load($pid);
  if ($object === FALSE || !isset($object[$dsid])) {
    drupal_json_output(array(
      'css' => array(),
      'html' => "<div class=\"transcription-viewer-content {$project_id}\">" . t('No Transcript available.') . '</div>',
    ));
    drupal_exit();
  }
  else {
    $content = livingstone_transcript_saxon_transform_embedded($object[$dsid], array());
    if ($content) {
      $css = isset($content['#attached']['css']) ? $content['#attached']['css'] : array();
      $content = drupal_render($content);
      $xml = simplexml_load_string($content);
      $style = $xml->xpath('/@style');
      if ($style) {
        $xml->addAttribute('style', $style[0]);
      }
      drupal_json_output(array(
        'css' => $css,
        'html' => $xml->saveXML(),
      ));
      drupal_exit();
    }
  }
  drupal_json_output(array(
    'css' => array(),
    'html' => "<div class=\"transcription-viewer-content {$project_id}\">" . t('Failed to generate transcript.') . '</div>',
  ));
  drupal_exit();
}

/**
 * Implements hook_theme().
 */
function livingstone_transcript_theme() {
  return array(
    'livingstone_transcript' => array(
      'variables' => array(
        // PID of the object (Required).
        'pid' => NULL,
        // The Datastream of the transcript, defaults to TEI.
        'dsid' => 'TEI',
        'classes' => array(),
      ),
    ),
    'livingstone_transcript_delayed' => array(
      'variables' => array(
        // PID of the object (Required).
        'pid' => NULL,
        // The Datastream of the transcript, defaults to TEI.
        'dsid' => 'TEI',
        'classes' => array(),
      ),
    ),
    'livingstone_transcript_delayed_content' => array(
      'variables' => array(
        // PID of the object (Required).
        'pid' => NULL,
        // The Datastream of the transcript, defaults to TEI.
        'dsid' => 'TEI',
        'classes' => array(),
      ),
    ),
  );
}

/**
 * Implements hook_preprocess_theme().
 */
function theme_livingstone_transcript(array &$variables) {
  module_load_include('inc', 'livingstone_transcript', 'transcript');
  $pid = $variables['pid'];
  $dsid = $variables['dsid'];
  $classes = $variables['classes'];
  $object = islandora_object_load($pid);
  if ($object === FALSE || !isset($object[$dsid])) {
    $content = t('No Transcript available.');
  }
  else {
    $content = livingstone_transcript_saxon_transform_embedded($object[$dsid], $classes);
    if ($content === FALSE) {
      $project_id = livingstone_pid_to_project_id($pid);
      $content = "<div class=\"transcription-viewer-content {$project_id}\">" . t('Failed to generate transcript.') . '</div>';
    }
    else {
      $content = drupal_render($content);
    }
  }
  $module_path = drupal_get_path('module', 'livingstone_transcript');
  $element = array(
    '#attached' => array(
      'js' => array(
        "{$module_path}/js/livingstone-transcript.js",
      ),
      'css' => array(
        drupal_get_path('module', 'livingstone_transcript') . "/css/livingstone-transcript.css",
      ),
    ),
    '#markup' => $content,
  );
  return drupal_render($element);
}

/**
 * Implements hook_preprocess_theme().
 */
function theme_livingstone_transcript_delayed(array &$variables) {
  module_load_include('inc', 'livingstone_transcript', 'transcript');
  $pid = $variables['pid'];
  $dsid = $variables['dsid'];
  $classes = $variables['classes'];
  $classes[] = 'livingstone-transcript-delayed-load';
  $classes[] = 'transcription-viewer-content';
  $classes[] = livingstone_pid_to_project_id($pid);
  $classes = implode(' ', $classes);
  $content = "<div class=\"{$classes}\" data-pid=\"$pid\" data-dsid=\"$dsid\">Loading...</div>";
  if ($content === FALSE) {
    $content = t('Failed to generate transcript.');
  }
  $module_path = drupal_get_path('module', 'livingstone_transcript');
  $element = array(
    '#attached' => array(
      'js' => array(
        "{$module_path}/js/livingstone-transcript.js",
      ),
    ),
    '#markup' => $content,
  );
  return drupal_render($element);
}

/**
 * Implements hook_field_formatter_info().
 */
function livingstone_transcript_field_formatter_info() {
  return array(
    'transcript_formatter' => array(
      'label' => t('Transcript Display'),
      'field types' => array('double_field'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function livingstone_transcript_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  module_load_include('inc', 'livingstone', 'includes/utilities');
  $documents = array();
  foreach ($items as $item) {
    $documents[$item['first']] = $item['second'];
  }
  // Render the first two transcriptions the reset are fetch via ajax.
  $count = 0;
  $transcriptions = array();
  foreach ($documents as $project_id => $label) {
    $transcriptions[] = array(
      '#theme' => $count < 2 ? 'livingstone_transcript' : 'livingstone_transcript_delayed',
      '#pid' => livingstone_project_id_to_pid($project_id),
      '#classes' => array(),
    );
    $count++;
  }
  // Only render the first two server side.
  $transcriptions = drupal_render($transcriptions);
  $panels = array();
  foreach(array_slice($documents, 0, 2) as $project_id => $label) {
    $panels[] = array(
      '#prefix' => '<div class="pane">',
      '#suffix' => '</div>',
      'toolbar' => array(
        '#prefix' => '<div class="transcription-viewer-toolbar">',
        '#suffix' => '</div>',
        'transcription' => array(
          '#type' => 'select',
          '#attributes' => array(
            'data-mobile' => 'true',
            'class' => array(
              'selectpicker',
              'transcript',
            )
          ),
          '#options' => $documents,
          '#value' => $project_id,
        ),
        'date' => array(
          '#type' => 'select',
          '#attributes' => array(
            'data-mobile' => 'true',
            'class' => array(
              'selectpicker',
              'date',
            ),
          ),
          '#options' => array('Select date'),
        ),
      ),
      'content' => array(
        '#markup' => $transcriptions,
      ),
    );
  }
  $element = array(
    '#attached' => array(
      'css' => array(drupal_get_path('module', 'livingstone_transcript') . "/css/livingstone-transcript.css"),
    ),
    '#prefix' => '<div class="transcription-field-display">',
    '#suffix' => '</div>',
    'panels' => $panels,
  );
  return array($element);
}
