<?php

 /**
 * @file
 * An viewer for manuscripts with a TEI datastream.
 */

/**
 * Implements hook_menu().
 */
function livingstone_menu() {
  return array(
    'admin/islandora/livingstone/import/drupal' => array(
      'title' => "Import Manuscript's into Drupal Nodes",
      'description' => "Updates the Drupal content from Fedora, used by search and time line.",
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/node.import.form.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_node_import_form'),
    ),
    'admin/islandora/livingstone/import/fedora' => array(
      'title' => 'Import content from Remote FTP into Local Fedora',
      'description' => 'Updates and adds content from the FTP server into Fedora.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/fedora.import.form.overview.inc',
      'page callback' => 'livingstone_fedora_import_overview_menu_task',
    ),
    'admin/islandora/livingstone/import/fedora/overview' => array(
      'title' => 'Overview',
      'description' => 'Updates and adds content from the FTP server into Fedora.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.overview.inc',
      'page callback' => 'livingstone_fedora_import_overview_menu_task',
      'weight' => -50,
    ),
    'admin/islandora/livingstone/import/fedora/local' => array(
      'title' => 'Local objects',
      'description' => 'Lists all the local objects.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.local.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_local_objects_form'),
      'weight' => -40,
    ),
    'admin/islandora/livingstone/import/fedora/remote' => array(
      'title' => 'Remote objects',
      'description' => 'Lists all the remote objects.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.remote.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_remote_objects_form'),
      'weight' => -30,
    ),
    'admin/islandora/livingstone/import/fedora/add' => array(
      'title' => 'Add',
      'description' => 'Allows the user to add new objects from the FTP.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.add.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_add_objects_form'),
      'weight' => -20,
    ),
    'admin/islandora/livingstone/import/fedora/update' => array(
      'title' => 'Update',
      'description' => 'Allows the user to update existing objects from the FTP.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.update.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_update_objects_form'),
      'weight' => 0,
    ),
    'admin/islandora/livingstone/import/fedora/remove' => array(
      'title' => 'Remove',
      'description' => 'Allows the user to remove stale objects from Fedora.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.remove.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_remove_objects_form'),
      'weight' => 0,
    ),
    'admin/islandora/livingstone/import/fedora/publish' => array(
      'title' => 'Publish / Conceal',
      'description' => 'Allows the user to publish/hide objects in Fedora.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.publish.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_publish_objects_form'),
      'weight' => 10,
    ),
    'admin/islandora/livingstone/import/fedora/errors' => array(
      'title' => 'Error Log',
      'description' => 'Lists any errors that have occurred during import.',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/fedora.import.form.error.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('livingstone_fedora_import_error_form'),
      'weight' => 20,
    ),
    'livingstone-viewer/%' => array(
      'title' => 'Manuscript Viewer',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'livingstone_manuscript_viewer',
      'page arguments' => array(1),
    ),
    'livingstone-viewer-access/%' => array(
      'title' => 'Manuscript Viewer',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'livingstone_manuscript_viewer_access',
      'page arguments' => array(1),
    ),
    'livingstone-tei/%' => array(
      'title' => 'Manuscript Viewer TEI',
      'access arguments' => array('access content'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'livingstone_manuscript_viewer_transcript',
      'page arguments' => array(1),
    )
  );
}

/**
 * Implements hook_menu_alter().
 */
function livingstone_menu_alter(&$items) {
  if (isset($items['islandora/search'])) {
    $search_item = &$items['islandora/search'];
    $search_item['page callback'] = 'livingstone_browse_catalogue';
  }
  if (isset($items['islandora/object/%islandora_object'])) {
    $view_object = &$items['islandora/object/%islandora_object'];
    $view_object['page callback'] = 'livingstone_menu_object_view_redirect';
    $view_object['page arguments'] = array(2);
  }
}

/**
 * Redirects islandora object to the catalogue page.
 *
 * @param AbstractObject $object
 */
function livingstone_menu_object_view_redirect(AbstractObject $object) {
  $pid = preg_replace('/:/', '_', $object->id);
  drupal_goto("islandora/search/{$pid}");
}

/**
 * Implements hook_node_info().
 */
function livingstone_node_info() {
  return array(
    'manuscript' => array(
      'name' => t('Manuscript'),
      'base' => 'node_content',
      'description' => t('Manuscript data synced from Fedora, do not create manually.'),
      'has_title' => TRUE,
      'title_label' => t('Title'),
      'locked' => TRUE,
    ),
  );
}

/**
 * Custom Solr Search Results page for the standard catalogue.
 *
 * @param string|null $query
 *   The search query.
 *
 * @return array
 *   The search form and results.
 */
function livingstone_browse_catalogue($query = NULL) {
  module_load_include('inc', 'livingstone', 'includes/browse.catalogue');
  return drupal_get_form('livingstone_browse_catalogue_form', $query);
}

/**
 * Callback to render the viewer.
 */
function livingstone_manuscript_viewer($manuscript = "liv:000490", $display_page = 0) {
  global $language;
  drupal_add_http_header('Content-Type', 'text/html; charset=utf-8');
  drupal_add_http_header('Content-Language', $language->language);
  return array(
    '#type' => 'page',
    '#theme_wrappers' => array('livingstone_manuscript_html'),
    'content' => array(
      '#theme' => 'livingstone_manuscript_viewer',
      '#manuscript' => $manuscript,
      '#display_page' => isset($display_page) ? $display_page : 0,
    ),
  );
}

/**
 * Callback to render the TEI transcription as HTML.
 *
 * @todo Remove? or make as a separate iframe.
 *
 * @param string $manuscript
 *   The PID of the manuscript.
 * @param int $page
 *   The page of the transcription to render.
 */
function livingstone_manuscript_viewer_transcript($manuscript, $display_page = 0) {
  global $language;
  drupal_add_http_header('Content-Type', 'text/html; charset=utf-8');
  drupal_add_http_header('Content-Language', $language->language);
  return array(
    '#theme' => 'livingstone_manuscript_transcript',
    '#manuscript' => $manuscript,
    '#display_page' => isset($display_page) ? $display_page : 0,
  );
}

/**
 * Implements hook_theme().
 */
function livingstone_theme() {
  // Solution packs using this as a viewer need to set these variables.
  return array(
    'livingstone_manuscript_html' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/livingstone-manuscript-html',
      'render element' => 'page',
    ),
    'livingstone_manuscript_viewer' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/livingstone-manuscript-viewer',
      'variables' => array(
        // PID of the Manuscript object (Required).
        'manuscript' => NULL,
        // Page to display (Required).
        'display_page' => NULL,
      ),
    ),
    'livingstone_manuscript_item_details' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/livingstone-manuscript-item-details',
      'variables' => array(
        // PID of the Manuscript object (Required).
        'manuscript' => NULL,
      ),
    ),
    'livingstone_manuscript_transcript' => array(
      'file' => 'theme/theme.inc',
      'variables' => array(
        // PID of the Manuscript object (Required).
        'manuscript' => NULL,
        // Page to render out (Required).
        'display_page' => NULL,
      ),
    ),
    'livingstone_browse_catalogue_search' => array(
      'file' => 'includes/browse.catalogue.inc',
      'render element' => 'element',
      'template' => 'theme/livingstone-browse-catalogue-search',
    ),
    'livingstone_browse_catalogue_date_range' => array(
      'file' => 'includes/browse.catalogue.inc',
      'render element' => 'element',
      'template' => 'theme/livingstone-browse-catalogue-date-range',
    ),
  );
}

function livingstone_preprocess_search_result(array &$variables) {
  global $user;
  $result = &$variables['result'];
  if (isset($result['node'])) {
    $node = $result['node'];
    if ($node->type == 'manuscript') {
      $get_value = function($field, $default) use ($node) {
        return isset($node->{$field}[LANGUAGE_NONE][0]['value']) ?
          $node->{$field}[LANGUAGE_NONE][0]['value'] :
          $default;
      };
      $pid = $get_value('pid');
      $viewable = $get_value('viewable');
      if ($viewable) {
        $variables['url'] = $result['link'] = url("islandora/search/\"$pid\"", array(
          'absolute' => TRUE,
          'query' => array(
            'view_pid' => $pid,
          ),
        ));
      }
      else {
        $variables['url'] = $result['link'] = url("islandora/search/\"$pid\"", array('absolute' => TRUE));
      }
    }
  }
}


function livingstone_manuscript_viewer_access($pid) {
  $path_parts = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
  $solr = new Apache_Solr_Service($path_parts['host'], $path_parts['port'], $path_parts['path'] . '/');
  $solr->setCreateDocuments(0);
  $params = array(
    'fl' => 'PID',
    'defType' => 'edismax',
    'fq' => array(
      "viewable_b:true",
      "RELS_EXT_hasModel_uri_s:\"info:fedora/islandora:manuscriptCModel\"",
    ),
    'start' => 0,
    'rows' => 1,
  );
  try {
    $results = $solr->search("PID:\"{$pid}\"", 0,1 , $params, 'GET');
    $results = isset($results) ? json_decode($results->getRawResponse(), TRUE) : array();
    $viewable = count($results['response']['docs']) == 1;
    return drupal_json_output(array('viewable' => $viewable));
  }
  catch (Exception $e) {
    return drupal_json_output(array('viewable' => FALSE));
  }
}

/**
 * Implements hook_islandora_derivative_alter().
 * @param array $derivatives
 * @param AbstractObject $object
 */
function livingstone_islandora_derivative_alter(array &$derivatives, AbstractObject $object) {
  foreach ($derivatives as $key => $derivative) {
    if ($derivative['destination_dsid'] != 'JP2') {
      unset($derivatives[$key]);
    }
  }
}